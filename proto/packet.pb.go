// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/packet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_PROTOCOL_UNSPECIFIED Protocol = 0
	Protocol_PROTOCOL_ICMP        Protocol = 1
	Protocol_PROTOCOL_TCP         Protocol = 6
	Protocol_PROTOCOL_UDP         Protocol = 17
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0:  "PROTOCOL_UNSPECIFIED",
		1:  "PROTOCOL_ICMP",
		6:  "PROTOCOL_TCP",
		17: "PROTOCOL_UDP",
	}
	Protocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"PROTOCOL_ICMP":        1,
		"PROTOCOL_TCP":         6,
		"PROTOCOL_UDP":         17,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packet_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_proto_packet_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{0}
}

type Direction int32

const (
	Direction_DIRECTION_UNSPECIFIED Direction = 0
	Direction_DIRECTION_FORWARD     Direction = 1 // Client -> Server -> Target
	Direction_DIRECTION_REVERSE     Direction = 2 // Target -> Server -> Client
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "DIRECTION_FORWARD",
		2: "DIRECTION_REVERSE",
	}
	Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"DIRECTION_FORWARD":     1,
		"DIRECTION_REVERSE":     2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packet_proto_enumTypes[1].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_proto_packet_proto_enumTypes[1]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{1}
}

type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED MessageType = 0
	MessageType_CLIENT_REGISTER          MessageType = 1
	MessageType_PROXY_REGISTER           MessageType = 2
	MessageType_REGISTER_ACK             MessageType = 3
	MessageType_PACKET                   MessageType = 4
	MessageType_HEARTBEAT                MessageType = 5
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSPECIFIED",
		1: "CLIENT_REGISTER",
		2: "PROXY_REGISTER",
		3: "REGISTER_ACK",
		4: "PACKET",
		5: "HEARTBEAT",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED": 0,
		"CLIENT_REGISTER":          1,
		"PROXY_REGISTER":           2,
		"REGISTER_ACK":             3,
		"PACKET":                   4,
		"HEARTBEAT":                5,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packet_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_packet_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{2}
}

type ConnectionTuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcIp         string                 `protobuf:"bytes,1,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	SrcPort       uint32                 `protobuf:"varint,2,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstIp         string                 `protobuf:"bytes,3,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	DstPort       uint32                 `protobuf:"varint,4,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionTuple) Reset() {
	*x = ConnectionTuple{}
	mi := &file_proto_packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTuple) ProtoMessage() {}

func (x *ConnectionTuple) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionTuple.ProtoReflect.Descriptor instead.
func (*ConnectionTuple) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionTuple) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *ConnectionTuple) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *ConnectionTuple) GetDstIp() string {
	if x != nil {
		return x.DstIp
	}
	return ""
}

func (x *ConnectionTuple) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

type Packet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ConnTuple     *ConnectionTuple       `protobuf:"bytes,3,opt,name=conn_tuple,json=connTuple,proto3" json:"conn_tuple,omitempty"`
	Protocol      Protocol               `protobuf:"varint,4,opt,name=protocol,proto3,enum=proto.Protocol" json:"protocol,omitempty"`
	Direction     Direction              `protobuf:"varint,5,opt,name=direction,proto3,enum=proto.Direction" json:"direction,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_proto_packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{1}
}

func (x *Packet) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Packet) GetConnTuple() *ConnectionTuple {
	if x != nil {
		return x.ConnTuple
	}
	return nil
}

func (x *Packet) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_PROTOCOL_UNSPECIFIED
}

func (x *Packet) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *Packet) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ClientRegister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientRegister) Reset() {
	*x = ClientRegister{}
	mi := &file_proto_packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRegister) ProtoMessage() {}

func (x *ClientRegister) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRegister.ProtoReflect.Descriptor instead.
func (*ClientRegister) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{2}
}

func (x *ClientRegister) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type ProxyRegister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProxyId       string                 `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ManagedCidr   string                 `protobuf:"bytes,2,opt,name=managed_cidr,json=managedCidr,proto3" json:"managed_cidr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyRegister) Reset() {
	*x = ProxyRegister{}
	mi := &file_proto_packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRegister) ProtoMessage() {}

func (x *ProxyRegister) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRegister.ProtoReflect.Descriptor instead.
func (*ProxyRegister) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyRegister) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *ProxyRegister) GetManagedCidr() string {
	if x != nil {
		return x.ManagedCidr
	}
	return ""
}

type RegisterAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAck) Reset() {
	*x = RegisterAck{}
	mi := &file_proto_packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAck) ProtoMessage() {}

func (x *RegisterAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAck.ProtoReflect.Descriptor instead.
func (*RegisterAck) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_proto_packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{5}
}

func (x *Heartbeat) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Heartbeat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Envelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=proto.MessageType" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_proto_packet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{6}
}

func (x *Envelope) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *Envelope) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ClientMessage_Register
	//	*ClientMessage_Packet
	//	*ClientMessage_Heartbeat
	//	*ClientMessage_Ack
	Message       isClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_proto_packet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{7}
}

func (x *ClientMessage) GetMessage() isClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ClientMessage) GetRegister() *ClientRegister {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *ClientMessage) GetPacket() *Packet {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Packet); ok {
			return x.Packet
		}
	}
	return nil
}

func (x *ClientMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *ClientMessage) GetAck() *RegisterAck {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Register struct {
	Register *ClientRegister `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ClientMessage_Packet struct {
	Packet *Packet `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type ClientMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

type ClientMessage_Ack struct {
	Ack *RegisterAck `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

func (*ClientMessage_Register) isClientMessage_Message() {}

func (*ClientMessage_Packet) isClientMessage_Message() {}

func (*ClientMessage_Heartbeat) isClientMessage_Message() {}

func (*ClientMessage_Ack) isClientMessage_Message() {}

type ProxyMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ProxyMessage_Register
	//	*ProxyMessage_Packet
	//	*ProxyMessage_Heartbeat
	//	*ProxyMessage_Ack
	Message       isProxyMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyMessage) Reset() {
	*x = ProxyMessage{}
	mi := &file_proto_packet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyMessage) ProtoMessage() {}

func (x *ProxyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyMessage.ProtoReflect.Descriptor instead.
func (*ProxyMessage) Descriptor() ([]byte, []int) {
	return file_proto_packet_proto_rawDescGZIP(), []int{8}
}

func (x *ProxyMessage) GetMessage() isProxyMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ProxyMessage) GetRegister() *ProxyRegister {
	if x != nil {
		if x, ok := x.Message.(*ProxyMessage_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *ProxyMessage) GetPacket() *Packet {
	if x != nil {
		if x, ok := x.Message.(*ProxyMessage_Packet); ok {
			return x.Packet
		}
	}
	return nil
}

func (x *ProxyMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*ProxyMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *ProxyMessage) GetAck() *RegisterAck {
	if x != nil {
		if x, ok := x.Message.(*ProxyMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

type isProxyMessage_Message interface {
	isProxyMessage_Message()
}

type ProxyMessage_Register struct {
	Register *ProxyRegister `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ProxyMessage_Packet struct {
	Packet *Packet `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type ProxyMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

type ProxyMessage_Ack struct {
	Ack *RegisterAck `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

func (*ProxyMessage_Register) isProxyMessage_Message() {}

func (*ProxyMessage_Packet) isProxyMessage_Message() {}

func (*ProxyMessage_Heartbeat) isProxyMessage_Message() {}

func (*ProxyMessage_Ack) isProxyMessage_Message() {}

var File_proto_packet_proto protoreflect.FileDescriptor

const file_proto_packet_proto_rawDesc = "" +
	"\n" +
	"\x12proto/packet.proto\x12\x05proto\"u\n" +
	"\x0fConnectionTuple\x12\x15\n" +
	"\x06src_ip\x18\x01 \x01(\tR\x05srcIp\x12\x19\n" +
	"\bsrc_port\x18\x02 \x01(\rR\asrcPort\x12\x15\n" +
	"\x06dst_ip\x18\x03 \x01(\tR\x05dstIp\x12\x19\n" +
	"\bdst_port\x18\x04 \x01(\rR\adstPort\"\xf3\x01\n" +
	"\x06Packet\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x125\n" +
	"\n" +
	"conn_tuple\x18\x03 \x01(\v2\x16.proto.ConnectionTupleR\tconnTuple\x12+\n" +
	"\bprotocol\x18\x04 \x01(\x0e2\x0f.proto.ProtocolR\bprotocol\x12.\n" +
	"\tdirection\x18\x05 \x01(\x0e2\x10.proto.DirectionR\tdirection\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\"-\n" +
	"\x0eClientRegister\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"M\n" +
	"\rProxyRegister\x12\x19\n" +
	"\bproxy_id\x18\x01 \x01(\tR\aproxyId\x12!\n" +
	"\fmanaged_cidr\x18\x02 \x01(\tR\vmanagedCidr\"A\n" +
	"\vRegisterAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"F\n" +
	"\tHeartbeat\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"L\n" +
	"\bEnvelope\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.proto.MessageTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\xd2\x01\n" +
	"\rClientMessage\x123\n" +
	"\bregister\x18\x01 \x01(\v2\x15.proto.ClientRegisterH\x00R\bregister\x12'\n" +
	"\x06packet\x18\x02 \x01(\v2\r.proto.PacketH\x00R\x06packet\x120\n" +
	"\theartbeat\x18\x03 \x01(\v2\x10.proto.HeartbeatH\x00R\theartbeat\x12&\n" +
	"\x03ack\x18\x04 \x01(\v2\x12.proto.RegisterAckH\x00R\x03ackB\t\n" +
	"\amessage\"\xd0\x01\n" +
	"\fProxyMessage\x122\n" +
	"\bregister\x18\x01 \x01(\v2\x14.proto.ProxyRegisterH\x00R\bregister\x12'\n" +
	"\x06packet\x18\x02 \x01(\v2\r.proto.PacketH\x00R\x06packet\x120\n" +
	"\theartbeat\x18\x03 \x01(\v2\x10.proto.HeartbeatH\x00R\theartbeat\x12&\n" +
	"\x03ack\x18\x04 \x01(\v2\x12.proto.RegisterAckH\x00R\x03ackB\t\n" +
	"\amessage*[\n" +
	"\bProtocol\x12\x18\n" +
	"\x14PROTOCOL_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rPROTOCOL_ICMP\x10\x01\x12\x10\n" +
	"\fPROTOCOL_TCP\x10\x06\x12\x10\n" +
	"\fPROTOCOL_UDP\x10\x11*T\n" +
	"\tDirection\x12\x19\n" +
	"\x15DIRECTION_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DIRECTION_FORWARD\x10\x01\x12\x15\n" +
	"\x11DIRECTION_REVERSE\x10\x02*\x81\x01\n" +
	"\vMessageType\x12\x1c\n" +
	"\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCLIENT_REGISTER\x10\x01\x12\x12\n" +
	"\x0ePROXY_REGISTER\x10\x02\x12\x10\n" +
	"\fREGISTER_ACK\x10\x03\x12\n" +
	"\n" +
	"\x06PACKET\x10\x04\x12\r\n" +
	"\tHEARTBEAT\x10\x052I\n" +
	"\fTunnelClient\x129\n" +
	"\aConnect\x12\x14.proto.ClientMessage\x1a\x14.proto.ClientMessage(\x010\x012F\n" +
	"\vTunnelProxy\x127\n" +
	"\aConnect\x12\x13.proto.ProxyMessage\x1a\x13.proto.ProxyMessage(\x010\x01B\x18Z\x16network-tunneler/protob\x06proto3"

var (
	file_proto_packet_proto_rawDescOnce sync.Once
	file_proto_packet_proto_rawDescData []byte
)

func file_proto_packet_proto_rawDescGZIP() []byte {
	file_proto_packet_proto_rawDescOnce.Do(func() {
		file_proto_packet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_packet_proto_rawDesc), len(file_proto_packet_proto_rawDesc)))
	})
	return file_proto_packet_proto_rawDescData
}

var file_proto_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_packet_proto_goTypes = []any{
	(Protocol)(0),           // 0: proto.Protocol
	(Direction)(0),          // 1: proto.Direction
	(MessageType)(0),        // 2: proto.MessageType
	(*ConnectionTuple)(nil), // 3: proto.ConnectionTuple
	(*Packet)(nil),          // 4: proto.Packet
	(*ClientRegister)(nil),  // 5: proto.ClientRegister
	(*ProxyRegister)(nil),   // 6: proto.ProxyRegister
	(*RegisterAck)(nil),     // 7: proto.RegisterAck
	(*Heartbeat)(nil),       // 8: proto.Heartbeat
	(*Envelope)(nil),        // 9: proto.Envelope
	(*ClientMessage)(nil),   // 10: proto.ClientMessage
	(*ProxyMessage)(nil),    // 11: proto.ProxyMessage
}
var file_proto_packet_proto_depIdxs = []int32{
	3,  // 0: proto.Packet.conn_tuple:type_name -> proto.ConnectionTuple
	0,  // 1: proto.Packet.protocol:type_name -> proto.Protocol
	1,  // 2: proto.Packet.direction:type_name -> proto.Direction
	2,  // 3: proto.Envelope.type:type_name -> proto.MessageType
	5,  // 4: proto.ClientMessage.register:type_name -> proto.ClientRegister
	4,  // 5: proto.ClientMessage.packet:type_name -> proto.Packet
	8,  // 6: proto.ClientMessage.heartbeat:type_name -> proto.Heartbeat
	7,  // 7: proto.ClientMessage.ack:type_name -> proto.RegisterAck
	6,  // 8: proto.ProxyMessage.register:type_name -> proto.ProxyRegister
	4,  // 9: proto.ProxyMessage.packet:type_name -> proto.Packet
	8,  // 10: proto.ProxyMessage.heartbeat:type_name -> proto.Heartbeat
	7,  // 11: proto.ProxyMessage.ack:type_name -> proto.RegisterAck
	10, // 12: proto.TunnelClient.Connect:input_type -> proto.ClientMessage
	11, // 13: proto.TunnelProxy.Connect:input_type -> proto.ProxyMessage
	10, // 14: proto.TunnelClient.Connect:output_type -> proto.ClientMessage
	11, // 15: proto.TunnelProxy.Connect:output_type -> proto.ProxyMessage
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_packet_proto_init() }
func file_proto_packet_proto_init() {
	if File_proto_packet_proto != nil {
		return
	}
	file_proto_packet_proto_msgTypes[7].OneofWrappers = []any{
		(*ClientMessage_Register)(nil),
		(*ClientMessage_Packet)(nil),
		(*ClientMessage_Heartbeat)(nil),
		(*ClientMessage_Ack)(nil),
	}
	file_proto_packet_proto_msgTypes[8].OneofWrappers = []any{
		(*ProxyMessage_Register)(nil),
		(*ProxyMessage_Packet)(nil),
		(*ProxyMessage_Heartbeat)(nil),
		(*ProxyMessage_Ack)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_packet_proto_rawDesc), len(file_proto_packet_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_packet_proto_goTypes,
		DependencyIndexes: file_proto_packet_proto_depIdxs,
		EnumInfos:         file_proto_packet_proto_enumTypes,
		MessageInfos:      file_proto_packet_proto_msgTypes,
	}.Build()
	File_proto_packet_proto = out.File
	file_proto_packet_proto_goTypes = nil
	file_proto_packet_proto_depIdxs = nil
}

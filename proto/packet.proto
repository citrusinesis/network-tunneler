syntax = "proto3";

package proto;

option go_package = "network-tunneler/proto";

enum Protocol {
  PROTOCOL_UNSPECIFIED = 0;
  PROTOCOL_ICMP = 1;
  PROTOCOL_TCP = 6;
  PROTOCOL_UDP = 17;
}

enum Direction {
  DIRECTION_UNSPECIFIED = 0;
  DIRECTION_FORWARD = 1;   // Client -> Server -> Target
  DIRECTION_REVERSE = 2;   // Target -> Server -> Client
}

enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  CLIENT_REGISTER = 1;
  PROXY_REGISTER = 2;
  REGISTER_ACK = 3;
  PACKET = 4;
  HEARTBEAT = 5;
}

message ConnectionTuple {
  string src_ip = 1;
  uint32 src_port = 2;
  string dst_ip = 3;
  uint32 dst_port = 4;
}

message Packet {
  string connection_id = 1;
  bytes data = 2;

  ConnectionTuple conn_tuple = 3;

  Protocol protocol = 4;
  Direction direction = 5;
  int64 timestamp = 6;
}

message ClientRegister {
  string client_id = 1;
}

message ProxyRegister {
  string proxy_id = 1;
  string managed_cidr = 2;
}

message RegisterAck {
  bool success = 1;
  string message = 2;
}

message Heartbeat {
  string sender_id = 1;
  int64 timestamp = 2;
}

message Envelope {
  MessageType type = 1;
  bytes payload = 2;
}

service TunnelClient {
  rpc Connect(stream ClientMessage) returns (stream ClientMessage);
}

service TunnelProxy {
  rpc Connect(stream ProxyMessage) returns (stream ProxyMessage);
}

message ClientMessage {
  oneof message {
    ClientRegister register = 1;
    Packet packet = 2;
    Heartbeat heartbeat = 3;
    RegisterAck ack = 4;
  }
}

message ProxyMessage {
  oneof message {
    ProxyRegister register = 1;
    Packet packet = 2;
    Heartbeat heartbeat = 3;
    RegisterAck ack = 4;
  }
}
